% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LongitSC.R
\name{LongitSC}
\alias{LongitSC}
\title{The function to fit a longitudinal bivariate binary model for semi-competing risks data with time-fixed covariates
and using P-splines for the time-varying functions.}
\usage{
LongitSC(
  longit.data,
  times = NULL,
  formula.NT,
  formula.T,
  formula.OR = NULL,
  formula.inter = ~1,
  data,
  epsOR = 10^(-10),
  knots = NULL,
  lambda = 0,
  init = NULL,
  maxit.optim = 50000
)
}
\arguments{
\item{longit.data}{A list with entries named \code{risk.NT}, \code{risk.T},  \code{YNT}, \code{YT}. See details below.}

\item{times}{A vector of increasing times (for example, the interval partition points \eqn{\tau_1}... \eqn{\tau_K}).
This vector is used to construct the B-splines}

\item{formula.NT}{A formula of the form \code{ ~ x1 + x2} where \code{x1} and \code{x2} are covariates to be used for 
the non-terminal event probability sub-model.}

\item{formula.T}{A formula of the form \code{ ~ x1 + x3} where \code{x1} and \code{x3} are covariates to be used for 
the non-terminal event probability sub-model.}

\item{formula.OR}{A formula of the form \code{ ~ x1 + x4} where \code{x1} and \code{x4} are covariates to be used for 
the odds ratio sub-model.}

\item{formula.inter}{A formula of the form \code{ ~ x1 + x4} where \code{x1} and \code{x4} are covariates to be used for 
the interaction between non-terminal event and covariates sub-model.}

\item{data}{A data.frame with the covariates specified in \code{formula.NT}, \code{formula.T} and \code{formula.OR}.}

\item{epsOR}{How close it the OR allowed to be to one before assuming it equals to one. Default is \code{10^(-10)}}

\item{knots}{Number of knots for the B-splines (default is 5).}

\item{lambda}{Penalization level. Either a vector of three values or a single number to be used for all three time-varying 
functions.}

\item{init}{Initial values for the parameters.}

\item{maxit.optim}{For internal use of \code{optim}. Default is 50000.}
}
\value{
The function returns an object of class \code{LongitSC} including estimates and confidence intervals for 
the time-varying functions and coefficients.
}
\description{
The function implements the proposed methodology in Nevo et al. (2020+) for time-fixed covariates under possible 
right censoring and left truncation. Data should be first converted to longitudinal bivariate binary representation. 
This could be done using \code{\link{TimesToLongit}}. The \code{LongitSC} function uses B-splines representation the time-varying 
functions and implements penalized maximum likelihood to fit the model.
}
\details{
Each of the matrices in \code{longit.data},  \code{risk.NT}, \code{risk.T},  \code{YNT}, \code{YT} have a row for each
unit and a column for each interval. Then, \code{risk.NT} and \code{risk.T} indicate whether the unit is at risk in each interval
for each of the events, respectively.  The matrices \code{YNT} and \code{YT} indicate whether the non-terminal and terminal
event, respectively, were observed by the end of each interval.
The function \code{\link{TimesToLongit}} can be used to obtain this representation of semicompeting risks time-to-event data.
}
\note{
For time-varying covariates use \code{\link{LongitSCtimeDep}} or \code{\link{LongitSCparamTimeDep}}.
}
\examples{
\dontrun{
set.seed(314)
times <- seq(1, 15, 1)
alpha.nt <- LongitSemiComp:::logit(dchisq(times,3, ncp =5)/2 + 0.025)
alpha.t <- LongitSemiComp:::logit(times*(0.075/10)  - 0.0005*(times/20)^2  + 0.05)
alpha.or <- 0.15 - times/10 + 0.75*(times/10)^2 + 0.3*(times/20)^3
plot(x = times, y= exp(alpha.or))
plot(x = times, y= LongitSemiComp:::expit(alpha.nt))
plot(x = times, y= LongitSemiComp:::expit(alpha.t))
beta.nt <- log(c(0.7, 3))
beta.t <- log(c(0.5, 1))
beta.or <- log(c(1.4, 1))
beta.y <- log(1.4)
my.data <- SimLongitData(n.sample = 2000, times = times,  beta.y,  
                         alpha.nt, alpha.t, alpha.or, 
                         beta.nt, beta.t, beta.or)
longit.data <- my.data[-1]
X <- as.data.frame(my.data[1])
LongitSC(longit.data = longit.data, times = times,  formula.NT =  ~ X.1 + X.2, 
         formula.T =  ~ X.1 + X.2, 
         formula.OR = ~ X.1 + X.2, 
         data = X, epsOR = 10^(-10),
         knots = 5, lambda = 1)
}
}
\author{
Daniel Nevo
}
