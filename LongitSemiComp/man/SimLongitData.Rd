% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimLongitData.R
\name{SimLongitData}
\alias{SimLongitData}
\title{The function that simulates data form longitudinal bivariate binary semicompeting risks data with baseline covariates}
\usage{
SimLongitData(
  n.sample,
  times = 1:100,
  beta.y,
  alpha.nt,
  alpha.t,
  alpha.or,
  beta.nt,
  beta.t,
  beta.or,
  gamma.inter = NULL,
  X = NULL
)
}
\arguments{
\item{n.sample}{Desired sample size.}

\item{times}{A vector of increasing times. Normally of equal length}

\item{beta.y}{True value for \eqn{\beta_y}.}

\item{alpha.nt}{True value for \eqn{\alpha_1(t)} for each \eqn{t} in \code{times}.}

\item{alpha.t}{True value for \eqn{\alpha_2(t)} for each \eqn{t} in \code{times}.}

\item{alpha.or}{True value for \eqn{\alpha_\theta(t)} for each \eqn{t} in \code{times}.}

\item{beta.nt}{True value for \eqn{\beta_1}.}

\item{beta.t}{True value for \eqn{\beta_2}.}

\item{beta.or}{True value for \eqn{\beta_\theta}.}

\item{gamma.inter}{True value for \eqn{\gamma_[inter]}}

\item{X}{A matrix of time-fixed covariates to be used for simulating the data. Number of rows should be 
\code{n.sample} and 
number of columns should be equal to \code{length(beta.nt)}. If not specified, \code{X} is simulated 
as iid Gaussian random variables.}
}
\value{
A list with the covariates used (\code{X}), at-risk indicators for each unit at each interval
 (\code{risk.NT} and \code{risk.T}) and outcome data
 at each interval (\code{YNT} and \code{YT}).
}
\description{
Given observed non-terminal and terminal event times, censoring indicators and possible left-truncation, 
this function returns the outcome data in the longitudinal bivariate binary representation according to given interval partition
 as proposed in Nevo et al.(2020+)
}
\examples{
\dontrun{
# Simulate semicompeting risks data
set.seed(314)
times <- seq(1, 15, 1)
alpha.nt <- LongitSemiComp:::logit(dchisq(times,3, ncp =5)/2 + 0.025)
alpha.t <- LongitSemiComp:::logit(times*(0.075/10)  - 0.0005*(times/20)^2  + 0.05)
alpha.or <- 0.15 - times/10 + 0.75*(times/10)^2 + 0.3*(times/20)^3
plot(x = times, y= exp(alpha.or))
plot(x = times, y= LongitSemiComp:::expit(alpha.nt))
plot(x = times, y= LongitSemiComp:::expit(alpha.t))
beta.nt <- log(c(0.7, 3))
beta.t <- log(c(0.5, 1))
beta.or <- log(c(1, 1))
beta.y <- log(1.4)
my.data <- SimLongitData(n.sample = 200, times = times,  beta.y,  
                         alpha.nt, alpha.t, alpha.or, 
                         beta.nt, beta.t, beta.or)
longit.data <- my.data[-1]
X <- my.data[1]
}

}
\author{
Daniel Nevo
}
